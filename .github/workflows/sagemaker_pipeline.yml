name: Build and Push Docker Images, Create SageMaker Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      PIPELINE_NAME: 'MLOpsPipeline'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Update AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        id: get_account_id
        run: echo "ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Define Docker Repository Names
        run: |
          echo "PREPROCESSING_NAME=demo-sagemaker-multimodel-preprocessing" >> $GITHUB_ENV
          echo "TRAINING_NAME=demo-sagemaker-multimodel-training" >> $GITHUB_ENV
          echo "MODEL_REGISTRY_NAME=demo-sagemaker-multimodel-model-registry" >> $GITHUB_ENV

      - name: Ensure ECR Repositories Exist
        run: |
          for repo in ${{ env.PREPROCESSING_NAME }} ${{ env.TRAINING_NAME }} ${{ env.MODEL_REGISTRY_NAME }}; do
            aws ecr describe-repositories --repository-names "$repo" --region ${{ env.AWS_REGION }} || \
            aws ecr create-repository --repository-name "$repo" --region ${{ env.AWS_REGION }}
          done

      - name: Authenticate Docker to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Images
        run: |
          for IMAGE in preprocessing training model_registry; do
            DOCKER_BUILDKIT=0 docker build \
              -t ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/demo-sagemaker-multimodel-$IMAGE:latest \
              -f Dockerfile.$IMAGE .
            docker push ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/demo-sagemaker-multimodel-$IMAGE:latest
          done

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sagemaker==2.227.0 boto3
          pip install -r requirements.txt

      - name: Create SageMaker Pipeline
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
        run: |
          python create_sagemaker_pipeline.py

      - name: Execute Pipeline
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
        run: |
          aws sagemaker start-pipeline-execution --pipeline-name ${{ env.PIPELINE_NAME }}
