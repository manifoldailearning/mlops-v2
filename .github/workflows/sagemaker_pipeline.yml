name: Build and Push Docker Images, Create SageMaker Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      PREPROCESSING_DOCKERFILE: Dockerfile.preprocessing
      TRAINING_DOCKERFILE: Dockerfile.training
      MODEL_REGISTRY_DOCKERFILE: Dockerfile.model_registry
      PIPELINE_NAME: 'MLOpsPipeline'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get AWS Account ID
        id: get_account_id
        run: echo "account_id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      - name: Set ECR Repository Names
        id: set_repo_names
        run: |
          echo "preprocessing_name=demo-sagemaker-multimodel-preprocessing" >> $GITHUB_ENV
          echo "training_name=demo-sagemaker-multimodel-training" >> $GITHUB_ENV
          echo "model_registry_name=demo-sagemaker-multimodel-model-registry" >> $GITHUB_ENV

      - name: Ensure ECR Repositories Exist
        run: |
          aws ecr describe-repositories --repository-names "${{ env.preprocessing_name }}" --region ${{ env.AWS_REGION }} || \
          aws ecr create-repository --repository-name "${{ env.preprocessing_name }}" --region ${{ env.AWS_REGION }}

          aws ecr describe-repositories --repository-names "${{ env.training_name }}" --region ${{ env.AWS_REGION }} || \
          aws ecr create-repository --repository-name "${{ env.training_name }}" --region ${{ env.AWS_REGION }}

          aws ecr describe-repositories --repository-names "${{ env.model_registry_name }}" --region ${{ env.AWS_REGION }} || \
          aws ecr create-repository --repository-name "${{ env.model_registry_name }}" --region ${{ env.AWS_REGION }}

      - name: Authenticate Docker to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push Preprocessing Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build \
            -t ${{ env.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.preprocessing_name }}:latest \
            -f ${{ env.PREPROCESSING_DOCKERFILE }} .
          docker push ${{ env.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.preprocessing_name }}:latest

      - name: Build and Push Training Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build \
            -t ${{ env.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.training_name }}:latest \
            -f ${{ env.TRAINING_DOCKERFILE }} .
          docker push ${{ env.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.training_name }}:latest

      - name: Build and Push Model Registry Docker Image
        run: |
          DOCKER_BUILDKIT=1 docker build \
            -t ${{ env.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.model_registry_name }}:latest \
            -f ${{ env.MODEL_REGISTRY_DOCKERFILE }} .
          docker push ${{ env.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.model_registry_name }}:latest

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install sagemaker==2.227.0 boto3
          pip install -r requirements.txt

      - name: Create SageMaker Pipeline
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          python create_sagemaker_pipeline.py
      
      - name: Execute Pipeline
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'
        run: |
          aws sagemaker start-pipeline-execution --pipeline-name ${{ env.PIPELINE_NAME }}
